datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  id                Int        @id @default(autoincrement())
  fullName          String
  gender            Gender
  dateOfBirth       DateTime @default(now()) @db.Date
  rollNo            Int        
  standard          String     
  adhaarCardNo      BigInt    
  scholarshipApplied Boolean
  remark            String?
  address           String
  photoUrl          String?
  status            StudentStatus @default(None)
  session           String
  
  @@unique([standard, rollNo, session])
  
  parents           Parent[]
  fees              Fee[]
  attendanceRecords Attendance[]
  marks             Marks[]
}

model Parent {
  id                Int        @id @default(autoincrement())
  fatherName        String
  fatherOccupation  String
  motherName        String
  motherOccupation  String
  fatherContact     BigInt
  motherContact     BigInt
  address           String
  studentId         Int
  student           Student    @relation(fields: [studentId], references: [id])
}

model Fee {
  id                Int        @id @default(autoincrement())
  title             String
  amount            Float
  amountDate        DateTime @default(now()) @db.Date
  admissionDate     DateTime @default(now()) @db.Date
  studentId         Int
  student           Student    @relation(fields: [studentId], references: [id])
}


model Attendance {
  id                Int        @id @default(autoincrement())
  studentName       String
  date              DateTime @default(now()) 
  status            Boolean
  rollNo            Int
  studentId         Int
  student           Student    @relation(fields: [studentId], references: [id])
  subjectId         Int?
  subject           Subject?   @relation(fields: [subjectId], references: [id])
  standard          String
  subjectName       String?

  session          String
}

model Marks {
  id             Int      @id @default(autoincrement())
  studentId      Int
  subjectId      Int
  subjectName    String
  examinationType String
  obtainedMarks  Float
  totalMarks     Float
  percentage     Float
  student        Student  @relation(fields: [studentId], references: [id])
  subject        Subject  @relation(fields: [subjectId], references: [id])
}

model Hostel{
    id Int @unique @id @default(autoincrement())
    name String 
    rollNo Int
    standard String
    gender String
    bed_number Int  @unique
    @@unique([rollNo, standard])
}

model Subject {
  id                Int        @id @default(autoincrement())
  name              String
  stdId             String     
  std               Standards   @relation(fields: [stdId], references: [std])
  attendanceRecords Attendance[]
  marks             Marks[]
}

model Standards{
    id        Int         @unique @default(autoincrement())
    std       String      @unique
    subjects  Subject[]
}

model Control{
    id                           Int @unique @default(autoincrement())
    number_of_hostel_bed         Int 
    Installment_one              Int
    Installment_two              Int
    Installment_three            Int
}

enum ExaminationType {
  UnitTest
  MidTerm
  Final
}

enum Gender {
  Male
  Female
}

enum StudentStatus {
  Passed
  Failed
  None
}



